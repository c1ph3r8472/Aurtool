#!/usr/bin/env bash

#
#  Aurtool V0.1.2 beta
#  
#  Maintainer: Eris Nihila (M1ndFlay3r)
#              sp0t1fyfr33tr1alabus3@outlook.com
#
#  This software is provided AS-IS with no explicit or implied warranty or liability. Use at your own risk.
#
#
#

OP=$1
USR="$(whoami)"


if [ "$USR" == root ]; then
  echo "Error: aurtool cannot be run as root!"
  exit 1
fi

if [ "$OP" == -Ss ]; then
  package-query -A -s ${@:2}
fi

if [ "$OP" == -Sss]; then
  echo "-"
  echo "Non-AUR"
  echo "-"
  pacman -Ss ${@:2}
  echo "-"
  echo "AUR"
  echo "-"
  package-query -A -s ${@:2}
fi

if [ "$OP" == -S ]; then
  for b in ${@:2}; do
    cd $HOME
    mkdir .aurtool
    cd .aurtool
    git clone http://aur.archlinux.org/$b.git
    cd $b
    echo "Would you like to edit the PKGBUILD? (Y/n)"
    read ANSWER
    function PKGBUILD {
    if [ $ANSWER == y ] || [ $ANSWER == Y ] || [ $ANSWER == Yes ] || [ $ANSWER == yes ] || [ $ANSWER == YES ]; then
      nano ./PKGBUILD
    fi
    }
    PKGBUILD
    makepkg -csi
    if [ $? -eq 1 ]; then
      echo "Error! Aborting"
      cd $HOME/.aurtool
      exit 1
    fi
    cd $HOME/.aurtool
  done
  echo "Build files and / or built packages are stored in .aurtool in your home directory. Would you like to delete them? "
  read ANSWER
  if [ $ANSWER == y ] || [ $ANSWER == Y ] || [ $ANSWER == yes ] || [ $ANSWER == Yes ] || [ $ANSWER == YES ]; then
    echo "Cleaning up.."
    rm -rf $HOME/.aurtool
  fi
fi

if [ "$OP" == -Sy ]; then
  package-query -A -u
fi

if [ "$OP" == -Syu ]; then
  UPD=$(package-query -A -u | grep -oP "aur/\K[^ ]*")
  for i in $UPD; do
    aurtool -S $i
  done
fi

if [ "$OP" == -Syyu ]; then
  echo "Updating AUR packages..."
  aurtool -Syu
  echo "Updating non-AUR packages..."
  sudo pacman -Syu
fi

if [ "$OP" == --help ]; then
  echo " Aurtool - minimal AUR package management system"
  echo " ------------------------------------------------------"
  echo " options:"
  echo " --------"
  echo " -S     - install a package (or update a single package)."
  echo " -Sy    - check for updates to installed AUR packages"
  echo " -Syu   - install all available updates to AUR packages"
  echo " -Syyu  - install all available updates to both AUR and non-AUR packages"
  echo " -Ss    - search the AUR for a package by name"
  echo " -Sss   - search both repositories and AUR for package by name"
  echo " --help - display this help dialog"
  echo " ------------------------------------------------------"
fi

if [ ! "$OP" == -S ] && [ ! "$OP" == -Sy ] && [ ! "$OP" == -Syu ] && [ ! "$OP" == -Ss ] && [ ! "$OP" == --help ] && [ ! "$OP" == -Syyu ]; then
  echo "Invalid command!"
  echo "--help for help"
  exit 1
fi

